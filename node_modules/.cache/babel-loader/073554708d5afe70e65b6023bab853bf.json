{"ast":null,"code":"var _jsxFileName = \"/Users/nam/Desktop/Programming/DogCatNaming/home/src/App.js\";\n\n/* eslint-disable */\nimport \"./App.css\";\nimport RestAPI from \"./RestAPI\";\nimport Title from \"./component/Title\";\nimport Body from \"./component/Body\";\nimport Result from \"./component/Result\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  var text = \"\";\n  axios.get(\"http://127.0.0.1:8000\", {\n    params: {\n      abc: \"가나다\"\n    }\n  }).then(response => text = JSON.stringify(response.data));\n  return (\n    /*#__PURE__*/\n\n    /*\n    <BrowserRouter>\n      <Title />\n      <Routes>\n        <Route path=\"/\" element={<Body />}></Route>\n        <Route path=\"/result\" element={<Result />}></Route>\n      </Routes>\n    </BrowserRouter>\n    */\n    _jsxDEV(\"div\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RestAPI","Title","Body","Result","BrowserRouter","Routes","Route","React","useEffect","useState","axios","App","text","get","params","abc","then","response","JSON","stringify","data"],"sources":["/Users/nam/Desktop/Programming/DogCatNaming/home/src/App.js"],"sourcesContent":["/* eslint-disable */\n\nimport \"./App.css\";\nimport RestAPI from \"./RestAPI\";\nimport Title from \"./component/Title\";\nimport Body from \"./component/Body\";\nimport Result from \"./component/Result\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  var text = \"\";\n  axios\n    .get(\"http://127.0.0.1:8000\", {\n      params: {\n        abc: \"가나다\",\n      },\n    })\n    .then((response) => (text = JSON.stringify(response.data)));\n\n  return (\n    /*\n    <BrowserRouter>\n      <Title />\n      <Routes>\n        <Route path=\"/\" element={<Body />}></Route>\n        <Route path=\"/result\" element={<Result />}></Route>\n      </Routes>\n    </BrowserRouter>\n    */\n    <div>{text}</div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AAEA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;EACb,IAAIC,IAAI,GAAG,EAAX;EACAF,KAAK,CACFG,GADH,CACO,uBADP,EACgC;IAC5BC,MAAM,EAAE;MACNC,GAAG,EAAE;IADC;EADoB,CADhC,EAMGC,IANH,CAMSC,QAAD,IAAeL,IAAI,GAAGM,IAAI,CAACC,SAAL,CAAeF,QAAQ,CAACG,IAAxB,CAN9B;EAQA;IAAA;;IACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI;MAAA,UAAMR;IAAN;MAAA;MAAA;MAAA;IAAA;EAVF;AAYD;;KAtBQD,G;AAwBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}