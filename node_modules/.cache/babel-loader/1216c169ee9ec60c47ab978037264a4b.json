{"ast":null,"code":"var _jsxFileName = \"/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result/Search.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search(props) {\n  _s();\n\n  const arr = props.names.split(\" \");\n  var searchWords = {};\n  var temp = \"asdf\";\n  const [results, setResults] = useState(\"\");\n  /*\n  useEffect(() => {\n    console.log(temp);\n  }, [temp]);\n  */\n  // JSON 형식으로 값 저장\n\n  for (var i in arr) {\n    var queryWords = arr[i];\n    searchWords[queryWords] = \"number\";\n  }\n\n  try {\n    var url = \"http://127.0.0.1:8000/api/\";\n\n    if (props.typeSelect === \"dog\") {\n      url += \"dog\";\n    } else {\n      url += \"cat\";\n    }\n\n    axios.get(url, {\n      params: {\n        breed: props.breed\n      }\n    }).then(response => {\n      const searchResults = response.data;\n      console.log(searchResults[0]);\n      temp = JSON.stringify(searchResults[0]);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n\n  setResults(temp);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: results\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Search, \"VILKG53RbbZgglJC+L7/Tc4aDbM=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["axios","useEffect","useState","Search","props","arr","names","split","searchWords","temp","results","setResults","i","queryWords","url","typeSelect","get","params","breed","then","response","searchResults","data","console","log","JSON","stringify","error"],"sources":["/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result/Search.js"],"sourcesContent":["/* eslint-disable */\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nfunction Search(props) {\n  const arr = props.names.split(\" \");\n  var searchWords = {};\n  var temp = \"asdf\";\n  const [results, setResults] = useState(\"\");\n\n  /*\n  useEffect(() => {\n    console.log(temp);\n  }, [temp]);\n  */\n\n  // JSON 형식으로 값 저장\n  for (var i in arr) {\n    var queryWords = arr[i];\n    searchWords[queryWords] = \"number\";\n  }\n\n  try {\n    var url = \"http://127.0.0.1:8000/api/\";\n    if (props.typeSelect === \"dog\") {\n      url += \"dog\";\n    } else {\n      url += \"cat\";\n    }\n\n    axios\n      .get(url, {\n        params: { breed: props.breed },\n      })\n      .then((response) => {\n        const searchResults = response.data;\n        console.log(searchResults[0]);\n        temp = JSON.stringify(searchResults[0]);\n      });\n  } catch (error) {\n    console.error(error);\n  }\n\n  setResults(temp);\n\n  return <h1>{results}</h1>;\n}\n\nexport default Search;\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;EAAA;;EACrB,MAAMC,GAAG,GAAGD,KAAK,CAACE,KAAN,CAAYC,KAAZ,CAAkB,GAAlB,CAAZ;EACA,IAAIC,WAAW,GAAG,EAAlB;EACA,IAAIC,IAAI,GAAG,MAAX;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;EAEA;AACF;AACA;AACA;AACA;EAEE;;EACA,KAAK,IAAIU,CAAT,IAAcP,GAAd,EAAmB;IACjB,IAAIQ,UAAU,GAAGR,GAAG,CAACO,CAAD,CAApB;IACAJ,WAAW,CAACK,UAAD,CAAX,GAA0B,QAA1B;EACD;;EAED,IAAI;IACF,IAAIC,GAAG,GAAG,4BAAV;;IACA,IAAIV,KAAK,CAACW,UAAN,KAAqB,KAAzB,EAAgC;MAC9BD,GAAG,IAAI,KAAP;IACD,CAFD,MAEO;MACLA,GAAG,IAAI,KAAP;IACD;;IAEDd,KAAK,CACFgB,GADH,CACOF,GADP,EACY;MACRG,MAAM,EAAE;QAAEC,KAAK,EAAEd,KAAK,CAACc;MAAf;IADA,CADZ,EAIGC,IAJH,CAISC,QAAD,IAAc;MAClB,MAAMC,aAAa,GAAGD,QAAQ,CAACE,IAA/B;MACAC,OAAO,CAACC,GAAR,CAAYH,aAAa,CAAC,CAAD,CAAzB;MACAZ,IAAI,GAAGgB,IAAI,CAACC,SAAL,CAAeL,aAAa,CAAC,CAAD,CAA5B,CAAP;IACD,CARH;EASD,CAjBD,CAiBE,OAAOM,KAAP,EAAc;IACdJ,OAAO,CAACI,KAAR,CAAcA,KAAd;EACD;;EAEDhB,UAAU,CAACF,IAAD,CAAV;EAEA,oBAAO;IAAA,UAAKC;EAAL;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;GA1CQP,M;;KAAAA,M;AA4CT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}