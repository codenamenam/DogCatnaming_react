{"ast":null,"code":"var _jsxFileName = \"/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport { useLocation } from \"react-router-dom\";\nimport ResultStat from \"./Result/ResultStat\";\nimport Campaign from \"./Result/Campaign\";\nimport { useEffect, useState } from \"react\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Result() {\n  _s();\n\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    element();\n    offLoading();\n  }, [loading]); //직접 주소로 접속했을때\n\n  if (location.state == null) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  const breed = location.state.breed;\n  const typeSelect = location.state.typeSelect;\n\n  const offLoading = () => {\n    setLoading(false);\n    console.log(\"asdf\");\n  };\n\n  const element = () => {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ResultStat, {\n        breed: breed,\n        typeSelect: typeSelect,\n        offLoading: offLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Campaign, {\n        typeSelect: typeSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this);\n  };\n\n  if (loading === true) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: element\n  }, void 0, false);\n}\n\n_s(Result, \"KxOUV5lqdrPRWRw1pAw1baxZYJ4=\", false, function () {\n  return [useLocation];\n});\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["useLocation","ResultStat","Campaign","useEffect","useState","Loading","Result","location","loading","setLoading","element","offLoading","state","breed","typeSelect","console","log"],"sources":["/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result.js"],"sourcesContent":["/* eslint-disable */\n\nimport { useLocation } from \"react-router-dom\";\nimport ResultStat from \"./Result/ResultStat\";\nimport Campaign from \"./Result/Campaign\";\nimport { useEffect, useState } from \"react\";\nimport Loading from \"./Loading\";\n\nfunction Result() {\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    element();\n    offLoading();\n  }, [loading]);\n\n  //직접 주소로 접속했을때\n  if (location.state == null) {\n    return <h1>Page not found.</h1>;\n  }\n\n  const breed = location.state.breed;\n  const typeSelect = location.state.typeSelect;\n\n  const offLoading = () => {\n    setLoading(false);\n    console.log(\"asdf\");\n  };\n\n  const element = () => {\n    <div>\n      <ResultStat\n        breed={breed}\n        typeSelect={typeSelect}\n        offLoading={offLoading}\n      />\n\n      <Campaign typeSelect={typeSelect} />\n    </div>;\n  };\n\n  if (loading === true) {\n    return <Loading />;\n  }\n\n  return <>{element}</>;\n}\n\nexport default Result;\n"],"mappings":";;;AAAA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACdO,OAAO;IACPC,UAAU;EACX,CAHQ,EAGN,CAACH,OAAD,CAHM,CAAT,CAJgB,CAShB;;EACA,IAAID,QAAQ,CAACK,KAAT,IAAkB,IAAtB,EAA4B;IAC1B,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,MAAMC,KAAK,GAAGN,QAAQ,CAACK,KAAT,CAAeC,KAA7B;EACA,MAAMC,UAAU,GAAGP,QAAQ,CAACK,KAAT,CAAeE,UAAlC;;EAEA,MAAMH,UAAU,GAAG,MAAM;IACvBF,UAAU,CAAC,KAAD,CAAV;IACAM,OAAO,CAACC,GAAR,CAAY,MAAZ;EACD,CAHD;;EAKA,MAAMN,OAAO,GAAG,MAAM;IACpB;IAAA;MAAA,wBACE,QAAC,UAAD;QACE,KAAK,EAAEG,KADT;QAEE,UAAU,EAAEC,UAFd;QAGE,UAAU,EAAEH;MAHd;QAAA;QAAA;QAAA;MAAA,QADF,eAOE,QAAC,QAAD;QAAU,UAAU,EAAEG;MAAtB;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EASD,CAVD;;EAYA,IAAIN,OAAO,KAAK,IAAhB,EAAsB;IACpB,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBAAO;IAAA,UAAGE;EAAH,iBAAP;AACD;;GAvCQJ,M;UACUN,W;;;KADVM,M;AAyCT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}