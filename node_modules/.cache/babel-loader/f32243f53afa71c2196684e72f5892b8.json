{"ast":null,"code":"var _jsxFileName = \"/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport { useLocation } from \"react-router-dom\";\nimport ResultStat from \"./Result/ResultStat\";\nimport Campaign from \"./Result/Campaign\";\nimport { useEffect, useState } from \"react\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Result() {\n  _s();\n\n  const location = useLocation();\n  const [loading, setLoading] = useState(true); //직접 주소로 접속했을때\n\n  if (location.state == null) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  const loadingSwitch = () => {\n    setLoading(false);\n    console.log(\"asdf\");\n  };\n\n  const breed = location.state.breed;\n  const typeSelect = location.state.typeSelect;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ResultStat, {\n        breed: breed,\n        typeSelect: typeSelect,\n        switch: loadingSwitch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Campaign, {\n        typeSelect: typeSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Result, \"+RykQ34o/H0nMNnhoi0wpyx1c64=\", false, function () {\n  return [useLocation];\n});\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["useLocation","ResultStat","Campaign","useEffect","useState","Loading","Result","location","loading","setLoading","state","loadingSwitch","console","log","breed","typeSelect"],"sources":["/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result.js"],"sourcesContent":["/* eslint-disable */\n\nimport { useLocation } from \"react-router-dom\";\nimport ResultStat from \"./Result/ResultStat\";\nimport Campaign from \"./Result/Campaign\";\nimport { useEffect, useState } from \"react\";\nimport Loading from \"./Loading\";\n\nfunction Result() {\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n\n  //직접 주소로 접속했을때\n  if (location.state == null) {\n    return <h1>Page not found.</h1>;\n  }\n\n  const loadingSwitch = () => {\n    setLoading(false);\n    console.log(\"asdf\");\n  };\n\n  const breed = location.state.breed;\n  const typeSelect = location.state.typeSelect;\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <div>\n          <ResultStat\n            breed={breed}\n            typeSelect={typeSelect}\n            switch={loadingSwitch}\n          />\n          <Campaign typeSelect={typeSelect} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Result;\n"],"mappings":";;;AAAA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC,CAFgB,CAIhB;;EACA,IAAIG,QAAQ,CAACG,KAAT,IAAkB,IAAtB,EAA4B;IAC1B,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,MAAMC,aAAa,GAAG,MAAM;IAC1BF,UAAU,CAAC,KAAD,CAAV;IACAG,OAAO,CAACC,GAAR,CAAY,MAAZ;EACD,CAHD;;EAKA,MAAMC,KAAK,GAAGP,QAAQ,CAACG,KAAT,CAAeI,KAA7B;EACA,MAAMC,UAAU,GAAGR,QAAQ,CAACG,KAAT,CAAeK,UAAlC;EAEA,oBACE;IAAA,UACGP,OAAO,gBACN,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADM,gBAGN;MAAA,wBACE,QAAC,UAAD;QACE,KAAK,EAAEM,KADT;QAEE,UAAU,EAAEC,UAFd;QAGE,MAAM,EAAEJ;MAHV;QAAA;QAAA;QAAA;MAAA,QADF,eAME,QAAC,QAAD;QAAU,UAAU,EAAEI;MAAtB;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA;EAJJ,iBADF;AAgBD;;GAjCQT,M;UACUN,W;;;KADVM,M;AAmCT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}