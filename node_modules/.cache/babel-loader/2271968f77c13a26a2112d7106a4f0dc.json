{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable */\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nfunction Search(breed, typeSelect, names) {\n  _s();\n\n  const arr = names.split(\" \");\n  var searchWords = {};\n  const [result, setResult] = useState(\"\"); // JSON 형식으로 값 저장\n\n  for (var i in arr) {\n    var queryWords = arr[i];\n    searchWords[queryWords] = \"number\";\n  }\n\n  useEffect(() => {\n    try {\n      var url = \"http://127.0.0.1:8000/api/\";\n\n      if (typeSelect === \"dog\") {\n        url += \"dog\";\n      } else {\n        url += \"cat\";\n      }\n\n      axios.get(url, {\n        params: {\n          breed: breed\n        }\n      }).then(response => {\n        const searchResults = response.data;\n        const temp = JSON.stringify(searchResults[0]);\n        setResult(temp);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n  return result;\n}\n\n_s(Search, \"FHpPeku8Adq9ozHVGhxzByLdhXc=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["axios","useEffect","useState","Search","breed","typeSelect","names","arr","split","searchWords","result","setResult","i","queryWords","url","get","params","then","response","searchResults","data","temp","JSON","stringify","error","console"],"sources":["/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result/Search.js"],"sourcesContent":["/* eslint-disable */\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nfunction Search(breed, typeSelect, names) {\n  const arr = names.split(\" \");\n  var searchWords = {};\n  const [result, setResult] = useState(\"\");\n\n  // JSON 형식으로 값 저장\n  for (var i in arr) {\n    var queryWords = arr[i];\n    searchWords[queryWords] = \"number\";\n  }\n\n  useEffect(() => {\n    try {\n      var url = \"http://127.0.0.1:8000/api/\";\n      if (typeSelect === \"dog\") {\n        url += \"dog\";\n      } else {\n        url += \"cat\";\n      }\n\n      axios\n        .get(url, {\n          params: { breed: breed },\n        })\n        .then((response) => {\n          const searchResults = response.data;\n          const temp = JSON.stringify(searchResults[0]);\n          setResult(temp);\n        });\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  return result;\n}\n\nexport default Search;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,UAAvB,EAAmCC,KAAnC,EAA0C;EAAA;;EACxC,MAAMC,GAAG,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAZ;EACA,IAAIC,WAAW,GAAG,EAAlB;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC,CAHwC,CAKxC;;EACA,KAAK,IAAIU,CAAT,IAAcL,GAAd,EAAmB;IACjB,IAAIM,UAAU,GAAGN,GAAG,CAACK,CAAD,CAApB;IACAH,WAAW,CAACI,UAAD,CAAX,GAA0B,QAA1B;EACD;;EAEDZ,SAAS,CAAC,MAAM;IACd,IAAI;MACF,IAAIa,GAAG,GAAG,4BAAV;;MACA,IAAIT,UAAU,KAAK,KAAnB,EAA0B;QACxBS,GAAG,IAAI,KAAP;MACD,CAFD,MAEO;QACLA,GAAG,IAAI,KAAP;MACD;;MAEDd,KAAK,CACFe,GADH,CACOD,GADP,EACY;QACRE,MAAM,EAAE;UAAEZ,KAAK,EAAEA;QAAT;MADA,CADZ,EAIGa,IAJH,CAISC,QAAD,IAAc;QAClB,MAAMC,aAAa,GAAGD,QAAQ,CAACE,IAA/B;QACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeJ,aAAa,CAAC,CAAD,CAA5B,CAAb;QACAR,SAAS,CAACU,IAAD,CAAT;MACD,CARH;IASD,CAjBD,CAiBE,OAAOG,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;IACD;EACF,CArBQ,EAqBN,EArBM,CAAT;EAuBA,OAAOd,MAAP;AACD;;GAnCQP,M;;KAAAA,M;AAqCT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}