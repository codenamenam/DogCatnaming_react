{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable */\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nfunction Search(props) {\n  _s();\n\n  const arr = props.names.split(\" \");\n  var searchWords = {};\n  const [result, setResult] = useState(\"\"); // JSON 형식으로 값 저장\n\n  for (var i in arr) {\n    var queryWords = arr[i];\n    searchWords[queryWords] = \"number\";\n  }\n\n  useEffect(() => {\n    try {\n      var url = \"http://127.0.0.1:8000/api/\";\n\n      if (props.typeSelect === \"dog\") {\n        url += \"dog\";\n      } else {\n        url += \"cat\";\n      }\n\n      axios.get(url, {\n        params: {\n          breed: props.breed\n        }\n      }).then(response => {\n        const searchResults = response.data;\n        const temp = JSON.stringify(searchResults[0]);\n        setResult(temp);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n  return result;\n}\n\n_s(Search, \"FHpPeku8Adq9ozHVGhxzByLdhXc=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["axios","useEffect","useState","Search","props","arr","names","split","searchWords","result","setResult","i","queryWords","url","typeSelect","get","params","breed","then","response","searchResults","data","temp","JSON","stringify","error","console"],"sources":["/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result/Search.js"],"sourcesContent":["/* eslint-disable */\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nfunction Search(props) {\n  const arr = props.names.split(\" \");\n  var searchWords = {};\n  const [result, setResult] = useState(\"\");\n\n  // JSON 형식으로 값 저장\n  for (var i in arr) {\n    var queryWords = arr[i];\n    searchWords[queryWords] = \"number\";\n  }\n\n  useEffect(() => {\n    try {\n      var url = \"http://127.0.0.1:8000/api/\";\n      if (props.typeSelect === \"dog\") {\n        url += \"dog\";\n      } else {\n        url += \"cat\";\n      }\n\n      axios\n        .get(url, {\n          params: { breed: props.breed },\n        })\n        .then((response) => {\n          const searchResults = response.data;\n          const temp = JSON.stringify(searchResults[0]);\n          setResult(temp);\n        });\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  return result;\n}\n\nexport default Search;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;EAAA;;EACrB,MAAMC,GAAG,GAAGD,KAAK,CAACE,KAAN,CAAYC,KAAZ,CAAkB,GAAlB,CAAZ;EACA,IAAIC,WAAW,GAAG,EAAlB;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CAHqB,CAKrB;;EACA,KAAK,IAAIS,CAAT,IAAcN,GAAd,EAAmB;IACjB,IAAIO,UAAU,GAAGP,GAAG,CAACM,CAAD,CAApB;IACAH,WAAW,CAACI,UAAD,CAAX,GAA0B,QAA1B;EACD;;EAEDX,SAAS,CAAC,MAAM;IACd,IAAI;MACF,IAAIY,GAAG,GAAG,4BAAV;;MACA,IAAIT,KAAK,CAACU,UAAN,KAAqB,KAAzB,EAAgC;QAC9BD,GAAG,IAAI,KAAP;MACD,CAFD,MAEO;QACLA,GAAG,IAAI,KAAP;MACD;;MAEDb,KAAK,CACFe,GADH,CACOF,GADP,EACY;QACRG,MAAM,EAAE;UAAEC,KAAK,EAAEb,KAAK,CAACa;QAAf;MADA,CADZ,EAIGC,IAJH,CAISC,QAAD,IAAc;QAClB,MAAMC,aAAa,GAAGD,QAAQ,CAACE,IAA/B;QACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeJ,aAAa,CAAC,CAAD,CAA5B,CAAb;QACAV,SAAS,CAACY,IAAD,CAAT;MACD,CARH;IASD,CAjBD,CAiBE,OAAOG,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;IACD;EACF,CArBQ,EAqBN,EArBM,CAAT;EAuBA,OAAOhB,MAAP;AACD;;GAnCQN,M;;KAAAA,M;AAqCT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}