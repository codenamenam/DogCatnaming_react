{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable */\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nfunction Search(breed, typeSelect) {\n  _s();\n\n  const [result, setResult] = useState(\"\");\n\n  function api() {\n    var url = \"http://127.0.0.1:8000/api/\";\n\n    if (typeSelect === \"dog\") {\n      url += \"dog\";\n    } else {\n      url += \"cat\";\n    }\n\n    axios.get(url, {\n      params: {\n        breed: breed\n      }\n    }).then(response => {\n      const searchResults = response.data;\n      let temp = searchResults;\n      delete temp.id;\n      delete temp.breed; // json을 값 기준으로 내림차순 정렬\n\n      let orderedResult = [];\n\n      for (let i in temp) {\n        orderedResult.push([i, result[i]]);\n      }\n\n      orderedResult.sort(function (a, b) {\n        return b[1] - a[1];\n      });\n      setResult(orderedResult);\n    });\n  }\n\n  useEffect(() => {\n    api();\n  }, []);\n  return result;\n}\n\n_s(Search, \"FHpPeku8Adq9ozHVGhxzByLdhXc=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["axios","useEffect","useState","Search","breed","typeSelect","result","setResult","api","url","get","params","then","response","searchResults","data","temp","id","orderedResult","i","push","sort","a","b"],"sources":["/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result/Search.js"],"sourcesContent":["/* eslint-disable */\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nfunction Search(breed, typeSelect) {\n  const [result, setResult] = useState(\"\");\n\n  function api() {\n    var url = \"http://127.0.0.1:8000/api/\";\n    if (typeSelect === \"dog\") {\n      url += \"dog\";\n    } else {\n      url += \"cat\";\n    }\n\n    axios\n      .get(url, {\n        params: { breed: breed },\n      })\n      .then((response) => {\n        const searchResults = response.data;\n        let temp = searchResults;\n\n        delete temp.id;\n        delete temp.breed;\n\n        // json을 값 기준으로 내림차순 정렬\n        let orderedResult = [];\n        for (let i in temp) {\n          orderedResult.push([i, result[i]]);\n        }\n        orderedResult.sort(function (a, b) {\n          return b[1] - a[1];\n        });\n\n        setResult(orderedResult);\n      });\n  }\n\n  useEffect(() => {\n    api();\n  }, []);\n\n  return result;\n}\n\nexport default Search;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,UAAvB,EAAmC;EAAA;;EACjC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;EAEA,SAASM,GAAT,GAAe;IACb,IAAIC,GAAG,GAAG,4BAAV;;IACA,IAAIJ,UAAU,KAAK,KAAnB,EAA0B;MACxBI,GAAG,IAAI,KAAP;IACD,CAFD,MAEO;MACLA,GAAG,IAAI,KAAP;IACD;;IAEDT,KAAK,CACFU,GADH,CACOD,GADP,EACY;MACRE,MAAM,EAAE;QAAEP,KAAK,EAAEA;MAAT;IADA,CADZ,EAIGQ,IAJH,CAISC,QAAD,IAAc;MAClB,MAAMC,aAAa,GAAGD,QAAQ,CAACE,IAA/B;MACA,IAAIC,IAAI,GAAGF,aAAX;MAEA,OAAOE,IAAI,CAACC,EAAZ;MACA,OAAOD,IAAI,CAACZ,KAAZ,CALkB,CAOlB;;MACA,IAAIc,aAAa,GAAG,EAApB;;MACA,KAAK,IAAIC,CAAT,IAAcH,IAAd,EAAoB;QAClBE,aAAa,CAACE,IAAd,CAAmB,CAACD,CAAD,EAAIb,MAAM,CAACa,CAAD,CAAV,CAAnB;MACD;;MACDD,aAAa,CAACG,IAAd,CAAmB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;QACjC,OAAOA,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAf;MACD,CAFD;MAIAf,SAAS,CAACW,aAAD,CAAT;IACD,CArBH;EAsBD;;EAEDjB,SAAS,CAAC,MAAM;IACdO,GAAG;EACJ,CAFQ,EAEN,EAFM,CAAT;EAIA,OAAOF,MAAP;AACD;;GAxCQH,M;;KAAAA,M;AA0CT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}