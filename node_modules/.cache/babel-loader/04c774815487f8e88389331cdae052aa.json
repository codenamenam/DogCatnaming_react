{"ast":null,"code":"var _jsxFileName = \"/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport { useLocation } from \"react-router-dom\";\nimport ResultStat from \"./Result/ResultStat\";\nimport ResultSummary from \"./Result/ResultSummary\";\nimport Talk from \"./Result/Talk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Result() {\n  _s();\n\n  const location = useLocation(); //직접 주소로 접속했을때\n\n  if (location.state == null) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  const breed = location.state.breed;\n  const type = location.state.type;\n  const typeSelect = location.state.typeSelect;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultStat, {\n      breed: breed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Talk, {\n      type: type,\n      typeSelect: typeSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Result, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["useLocation","ResultStat","ResultSummary","Talk","Result","location","state","breed","type","typeSelect"],"sources":["/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result.js"],"sourcesContent":["/* eslint-disable */\n\nimport { useLocation } from \"react-router-dom\";\nimport ResultStat from \"./Result/ResultStat\";\nimport ResultSummary from \"./Result/ResultSummary\";\nimport Talk from \"./Result/Talk\";\n\nfunction Result() {\n  const location = useLocation();\n\n  //직접 주소로 접속했을때\n  if (location.state == null) {\n    return <h1>Page not found.</h1>;\n  }\n\n  const breed = location.state.breed;\n  const type = location.state.type;\n  const typeSelect = location.state.typeSelect;\n\n  return (\n    <>\n      <ResultStat breed={breed} />\n      <Talk type={type} typeSelect={typeSelect} />\n    </>\n  );\n}\n\nexport default Result;\n"],"mappings":";;;AAAA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B,CADgB,CAGhB;;EACA,IAAIK,QAAQ,CAACC,KAAT,IAAkB,IAAtB,EAA4B;IAC1B,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,MAAMC,KAAK,GAAGF,QAAQ,CAACC,KAAT,CAAeC,KAA7B;EACA,MAAMC,IAAI,GAAGH,QAAQ,CAACC,KAAT,CAAeE,IAA5B;EACA,MAAMC,UAAU,GAAGJ,QAAQ,CAACC,KAAT,CAAeG,UAAlC;EAEA,oBACE;IAAA,wBACE,QAAC,UAAD;MAAY,KAAK,EAAEF;IAAnB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD;MAAM,IAAI,EAAEC,IAAZ;MAAkB,UAAU,EAAEC;IAA9B;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD;;GAlBQL,M;UACUJ,W;;;KADVI,M;AAoBT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}