{"ast":null,"code":"var _jsxFileName = \"/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport { useLocation } from \"react-router-dom\";\nimport ResultStat from \"./Result/ResultStat\";\nimport { useEffect, useState } from \"react\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Result() {\n  _s();\n\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    offLoading();\n  }, []); //직접 주소로 접속했을때\n\n  if (location.state == null) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  const breed = location.state.breed;\n  const typeSelect = location.state.typeSelect;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }, this), \",\", !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ResultStat, {\n        breed: breed,\n        typeSelect: typeSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Result, \"12V4DhK/+FphMBmcfsoKCCzma6g=\", false, function () {\n  return [useLocation];\n});\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["useLocation","ResultStat","useEffect","useState","Loading","Result","location","loading","setLoading","offLoading","state","breed","typeSelect"],"sources":["/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result.js"],"sourcesContent":["/* eslint-disable */\n\nimport { useLocation } from \"react-router-dom\";\nimport ResultStat from \"./Result/ResultStat\";\nimport { useEffect, useState } from \"react\";\nimport Loading from \"./Loading\";\n\nfunction Result() {\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    offLoading();\n  }, []);\n\n  //직접 주소로 접속했을때\n  if (location.state == null) {\n    return <h1>Page not found.</h1>;\n  }\n\n  const breed = location.state.breed;\n  const typeSelect = location.state.typeSelect;\n\n  return (\n    <>\n      {loading && <Loading />},\n      {!loading && (\n        <div>\n          <ResultStat breed={breed} typeSelect={typeSelect} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Result;\n"],"mappings":";;;AAAA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACdO,UAAU;EACX,CAFQ,EAEN,EAFM,CAAT,CAJgB,CAQhB;;EACA,IAAIH,QAAQ,CAACI,KAAT,IAAkB,IAAtB,EAA4B;IAC1B,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,MAAMC,KAAK,GAAGL,QAAQ,CAACI,KAAT,CAAeC,KAA7B;EACA,MAAMC,UAAU,GAAGN,QAAQ,CAACI,KAAT,CAAeE,UAAlC;EAEA,oBACE;IAAA,WACGL,OAAO,iBAAI,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADd,OAEG,CAACA,OAAD,iBACC;MAAA,uBACE,QAAC,UAAD;QAAY,KAAK,EAAEI,KAAnB;QAA0B,UAAU,EAAEC;MAAtC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA,gBADF;AAUD;;GA1BQP,M;UACUL,W;;;KADVK,M;AA4BT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}