{"ast":null,"code":"var _jsxFileName = \"/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result/ResultStat.js\";\n\n/* eslint-disable */\nimport ResultSummary from \"./ResultSummary\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResultStat(props) {\n  const breed = props.breed;\n  const typeSelect = props.typeSelect; // Search 결과 db로부터 받아옴\n\n  const result = Search(breed, typeSelect); // 필요없는 데이터 삭제\n\n  delete result.id;\n  delete result.breed; // json을 값 기준으로 정렬\n\n  let orderedResult = [];\n\n  for (let i in result) {\n    orderedResult.push([i, result[i]]);\n  }\n\n  orderedResult.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  console.log(orderedResult);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ResultSummary, {\n      breed: breed,\n      result: result,\n      maxBreed: \"asd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: JSON.stringify(result)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ResultStat;\nexport default ResultStat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultStat\");","map":{"version":3,"names":["ResultSummary","Search","ResultStat","props","breed","typeSelect","result","id","orderedResult","i","push","sort","a","b","console","log","JSON","stringify"],"sources":["/Users/nam/Desktop/Programming/DogCatNaming/home/src/component/Result/ResultStat.js"],"sourcesContent":["/* eslint-disable */\n\nimport ResultSummary from \"./ResultSummary\";\nimport Search from \"./Search\";\n\nfunction ResultStat(props) {\n  const breed = props.breed;\n  const typeSelect = props.typeSelect;\n\n  // Search 결과 db로부터 받아옴\n  const result = Search(breed, typeSelect);\n\n  // 필요없는 데이터 삭제\n  delete result.id;\n  delete result.breed;\n\n  // json을 값 기준으로 정렬\n  let orderedResult = [];\n  for (let i in result) {\n    orderedResult.push([i, result[i]]);\n  }\n  orderedResult.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n\n  console.log(orderedResult);\n\n  return (\n    <div>\n      <ResultSummary breed={breed} result={result} maxBreed={\"asd\"} />\n      <h1>{JSON.stringify(result)}</h1>\n    </div>\n  );\n}\n\nexport default ResultStat;\n"],"mappings":";;AAAA;AAEA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EACzB,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;EACA,MAAMC,UAAU,GAAGF,KAAK,CAACE,UAAzB,CAFyB,CAIzB;;EACA,MAAMC,MAAM,GAAGL,MAAM,CAACG,KAAD,EAAQC,UAAR,CAArB,CALyB,CAOzB;;EACA,OAAOC,MAAM,CAACC,EAAd;EACA,OAAOD,MAAM,CAACF,KAAd,CATyB,CAWzB;;EACA,IAAII,aAAa,GAAG,EAApB;;EACA,KAAK,IAAIC,CAAT,IAAcH,MAAd,EAAsB;IACpBE,aAAa,CAACE,IAAd,CAAmB,CAACD,CAAD,EAAIH,MAAM,CAACG,CAAD,CAAV,CAAnB;EACD;;EACDD,aAAa,CAACG,IAAd,CAAmB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IACjC,OAAOA,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAf;EACD,CAFD;EAIAE,OAAO,CAACC,GAAR,CAAYP,aAAZ;EAEA,oBACE;IAAA,wBACE,QAAC,aAAD;MAAe,KAAK,EAAEJ,KAAtB;MAA6B,MAAM,EAAEE,MAArC;MAA6C,QAAQ,EAAE;IAAvD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKU,IAAI,CAACC,SAAL,CAAeX,MAAf;IAAL;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;KA5BQJ,U;AA8BT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}